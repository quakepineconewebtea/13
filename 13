def func1(arg1, arg2):
    var65 = var5(arg2, arg1)
    var66 = 897 - var65
    if arg2 < arg2:
        var67 = -1933576166 - (var66 ^ -1651854746) + var65
    else:
        var67 = var65 + (var66 - -288) & var66
    var68 = (arg2 + var65) & var66 & var66
    var69 = (var65 & arg1 | 1847066754) | var68
    var70 = 1026430021 - arg1
    var71 = arg2 & var65 & var70 ^ arg1
    var72 = var70 & var65
    var73 = var69 ^ var72
    var74 = var66 ^ 998
    var75 = (var69 ^ var65 | -967) ^ -387
    var76 = 296051663 - var73 & var68 | var73
    result = 972 - (var71 & 924317379 | (var73 + var69))
    return result
def func4(arg6, arg7):
    var8 = func7()
    var12 = func8(var8, arg7)
    var16 = func10(arg6, arg7)
    var39 = func12(arg7, var16)
    var40 = var16 & -2961977 ^ arg6 | var39
    var41 = (arg6 ^ (var12 ^ -654)) ^ var39
    var42 = arg7 + -35755560 + -1779830483
    var43 = var41 - 565
    if var43 < arg7:
        var44 = arg6 | var41 - 713706344 + var39
    else:
        var44 = var41 | var43
    var45 = var40 + var8
    if var40 < var40:
        var46 = var42 & 1878495406 & var42
    else:
        var46 = 516 + -412 ^ var42 & var45
    var47 = var8 + (-432 | var40) - var40
    var48 = (var12 | var42) + -313
    if var16 < var48:
        var49 = arg6 - var16
    else:
        var49 = var40 ^ 1455087274 & 174 - arg6
    var50 = var41 + arg6
    var51 = var12 + var48 ^ -438762429 + var45
    var52 = var16 ^ var12 - (var39 ^ var12)
    var53 = var45 ^ var42
    var54 = var48 + var47
    var55 = var42 | var39 & var45 ^ var51
    var56 = var53 | var52
    var57 = ((var40 - var40) & var50) + var52
    var58 = var54 & var42 - var56
    var59 = var53 ^ arg6 ^ (var53 - var57)
    var60 = var39 & var43
    var61 = arg7 | arg6 & var39 & var58
    var62 = (var59 + var40 - var55) ^ var58
    var63 = var12 + (var8 & var54) - var60
    var64 = var59 + var58
    result = ((var51 - (var40 | (var63 - var55 - (var56 | var55)))) + var61 ^ ((var45 & var56) + var16) + var45) | var47
    return result
def func12(arg17, arg18):
    var19 = 1299322089 ^ -163597285
    var20 = (var19 | -317 | arg18) & var19
    var21 = (arg17 ^ var20) - -323 | arg18
    var22 = ((var20 ^ var21) | -434) ^ var20
    var23 = 904 & arg18 + 836713030 & 1732674742
    var24 = (var22 ^ arg17) + var20 | var23
    var25 = var22 ^ (var22 & (var24 & var24))
    var26 = arg18 + -371 + arg17 ^ var24
    var27 = (-300411301 - var20) - var26 & var25
    var28 = arg18 & ((var27 & arg17) | var26)
    var29 = (var19 + var19) + var20 | var20
    var30 = var20 + var29
    var31 = ((var22 | var24) ^ var19) & var29
    var32 = var21 | var30
    var33 = (var20 - var20 ^ var32) ^ 259
    var34 = arg18 & arg17
    var35 = var26 | 1894324557 + var21
    var36 = var30 - arg17 ^ var32 | var29
    var37 = (var29 - var29 ^ arg18) + var24
    var38 = var28 ^ var24
    result = var31 ^ ((var38 | (var27 ^ var28 ^ var25) & (var27 ^ ((arg18 + var23 - var22) & arg17)) + var25) + var22)
    return result
def func7():
    func5()
    result = len(xrange(33))
    func6()
    return result
def func6():
    global len
    del len
def func5():
    global len
    len = lambda x : 6
def func3():
    closure = [-8]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
def func8(arg9, arg10):
    def func9(acc, rest):
        var11 = rest & 1
        if acc == 0:
            return var11
        else:
            result = func9(acc - 1, var11)
            return result
    result = func9(10, 0)
    return result
def func10(arg13, arg14):
    def func11(acc, rest):
        var15 = 7 ^ acc ^ rest
        if acc == 0:
            return var15
        else:
            result = func11(acc - 1, var15)
            return result
    result = func11(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 13'
    print 'arg_number: 77'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
